{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/Development/Test-Projects/graphql-react/frontend/src/components/AllUsers.js\",\n    _s2 = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect } from \"react\";\nimport { GET_ALL_USERS } from \"../Queries/gqlQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AllUsers = () => {\n  _s2();\n\n  useEffect(() => {\n    var _s = $RefreshSig$();\n\n    const getData = async () => {\n      _s();\n\n      const {\n        loading,\n        error,\n        data\n      } = useQuery(GET_ALL_USERS, {\n        fetchPolicy: \"cache-first\"\n      });\n    };\n\n    _s(getData, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n      return [useQuery];\n    });\n\n    getData();\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  return data.getAllUsers.map(({\n    name,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [id, \": \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n};\n\n_s2(AllUsers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"sources":["/home/dev/Desktop/Development/Test-Projects/graphql-react/frontend/src/components/AllUsers.js"],"names":["useQuery","useEffect","GET_ALL_USERS","AllUsers","getData","loading","error","data","fetchPolicy","getAllUsers","map","name","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5BF,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMG,OAAO,GAAG,YAAY;AAAA;;AAC1B,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,UAA2BP,QAAQ,CAACE,aAAD,EAAgB;AACvDM,QAAAA,WAAW,EAAE;AAD0C,OAAhB,CAAzC;AAGD,KAJD;;AADc,OACRJ,OADQ;AAAA,cAEqBJ,QAFrB;AAAA;;AAMdI,IAAAA,OAAO;AACR,GAPQ,EAON,CAACG,IAAD,CAPM,CAAT;AASA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACE,WAAL,CAAiBC,GAAjB,CAAqB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,kBAC1B;AAAA,2BACE;AAAA,iBACGA,EADH,QACSD,IADT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUC,EAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD,CApBM;;IAAMT,Q;;KAAAA,Q","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { useEffect } from \"react\";\nimport { GET_ALL_USERS } from \"../Queries/gqlQueries\";\n\nexport const AllUsers = () => {\n  useEffect(() => {\n    const getData = async () => {\n      const { loading, error, data } = useQuery(GET_ALL_USERS, {\n        fetchPolicy: \"cache-first\",\n      });\n    };\n    getData();\n  }, [data]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.getAllUsers.map(({ name, id }) => (\n    <div key={id}>\n      <p>\n        {id}: {name}\n      </p>\n    </div>\n  ));\n};\n"]},"metadata":{},"sourceType":"module"}